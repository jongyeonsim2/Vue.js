1. 뷰 라우터
   1.1 라우팅
       - 웹 페이지간의 이동 방법
       - SPA 에서 주로 사용되는 방법.
         SPA(Single Page Application) : 
          페이지 하나로 화면을 전환시키는 애플리케이션
       - SPA에서는 화면 전환시 깜빡꺼림( 서버와의 통신 후 화면을 렌더링 )이 없음.
       - 화면 전환이 빠르고, 매끄럽게 전환이 된.

   1.2 뷰 라우터
       - 뷰에서 라우팅 기능을 구현할 수 있도록 지원하는 라이브러리임.
       - 사용되는 뷰 태그
         <router-link to="URL 주소">
          <a> 로 표시되고, 클릭하면, to에 지정한 URL 로 이동.
         <router-view> 
           지정된 URL에 따라 해당 컴포넌트에 화면을 뿌려주는 영역임.

   1.3 뷰 라우터의 유형
       - 네스티드 라우터
         상위 컴포넌트 1개에 하위 컴포넌트 1개를 포함하는 구조
       - 네임드 뷰
         특정 페이지로 이동시 여러 개의 컴포넌트를 동시에 표시하는 라우팅 방식.
         Head 영역, Body 영역, Fotter 영역 으로 화면을 구성하면, 3개의 
         컴포넌트로 구성이 됨.

2. 뷰 HTTP 통신
   2.1 웹 서버 통신
       - client는 request 를 보내고, server 는 response 보냄.
       - response(응답)을 처리하기 위해서는 promise 객체로 처리해야 함.
       - 성공이면 .then() 처리하고, 실패이면, .catch() 로 처리함.

   2.1 뷰에서의 통신 유형
       - 뷰 리소스
       - 엑시오스(axios)
         가장 많이 사용되는 HTTP 통신 라이브러리임.

         GET 방식
          axios.get(URL 주소).then().catch()

         POST 방식
          axios.post(URL 주소).then().catch()

         HTTP 옵션 설정 
          axios({
            method: 'get',
            url: URL 주소,
            .......
          });

3. 뷰 템플릿



